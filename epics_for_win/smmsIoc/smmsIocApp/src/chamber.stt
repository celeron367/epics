program chamber

float chamberIn; assign chamberIn to "CHAM:IN"; monitor chamberIn;
float chamberOut; assign chamberOut to "CHAM:OUT"; monitor chamberOut;
float x; assign x to "MOTOR:X:SET";
float y; assign y to "MOTOR:Y:SET";
float go; assign go to "MOTOR:MOVE";
float x_rbv; assign x_rbv to "MOTOR:X:RBV"; monitor x_rbv;
float y_rbv; assign y_rbv to "MOTOR:Y:RBV"; monitor y_rbv;
float go_py; assign go_py to "MOTOR:MOVE:PY";
float go_ny; assign go_ny to "MOTOR:MOVE:NY";
float lim_yb; assign lim_yb to "SW:LIM:BITS.B3"; monitor lim_yb;
float valve1; assign valve1 to "VALVE:TAR:SWITCH";
float valve2; assign valve2 to "VALVE:FORWARD:SWITCH";
float gate; assign gate to "SW:LIM:BITS.B5"; monitor gate;
float motor_cal; assign motor_cal to "MOTOR:CAL";
float vaccumLow; assign vaccumLow to "GAU:1:RBV"; monitor vaccumLow;
float lim_yt; assign lim_yt to "SW:LIM:BITS.B2"; monitor lim_yt;

ss chamber{   
     state init{	 
	    when(){
		}state TargetInside
	 }

	 state TargetInside{
	     when(chamberOut==1){
		     x=29.5;
			 pvPut(x);
			 y=1;
			 pvPut(y);
			 go=1;
			 pvPut(go);
		 }state stage1	 
	 }
	 state stage1{
	    when(x_rbv==29.5 && y_rbv==1){
		   go_py=1;
		   pvPut(go_py);	
		}state stage2
	 }
	 state stage2{
	    when(lim_yb==1){
		    valve1=0;
			pvPut(valve1);
			
		    valve2=1;
			pvPut(valve2);	
		}state TargetOutside
	 }

	 state TargetOutside{
	    when(lim_yb==1 && chamberIn==1 && gate==1 ){
		    valve2=0;
			pvPut(valve2);	
			
		    valve1=1;
			pvPut(valve1);	
		}state stage3
	 }
	 state stage3{ 
	   when(vaccumLow<50){
	       go_ny=1;
		   pvPut(go_ny);
	   }state stage4
	 }

	 state stage4{
	   when(lim_yt==1){
	       motor_cal=1;
		   pvPut(motor_cal);
	   }state stage5
	 }

	 state stage5{
	   when(x_rbv==0 && y_rbv==0){
	   }state TargetInside
	 }
	  
}

